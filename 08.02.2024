Задание 3
import java.util.Arrays;
import java.util.Scanner;

public class Car {
    public static void main(String[] args) {
        a1();
        odin();
        a2();
        dva();
        a3();
        z3();
        a4();
        z4();
        a5();
        z5();
        a6();
        z6();
        a7();

        a8();
    }

    public static void a1() {
        System.out.println("Задание 1");
    }

    public static void a2() {
        System.out.println("\n" + "Задание 2");
    }

    public static void a3() {
        System.out.println("\n" + "Задание 3");
    }

    public static void a4() {
        System.out.println("\n" + "Задание 4");
    }

    public static void a5() {
        System.out.println("\n" + "Задание 5");
    }

    public static void a6() {
        System.out.println("\n" + "Задание 6");
    }

    public static void a7() {
        System.out.println("\n" + "Задание 7");
    }

    public static void a8() {
        System.out.println("\n" + "Задание 8");
    }

    public static void odin() {
        int[] array = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};
        for (int i = 0; i < array.length; i++) {
            if (array[i] == 0) {
                array[i] = 1;
            } else {
                array[i] = 0;
            }
        }

        System.out.println(Arrays.toString(array));
    }

    public static void dva() {
        int[] array = new int[100];
        for (int i = 0; i < array.length; i++) {
            array[i] = i + 1;
        }
        System.out.println(Arrays.toString(array));
    }

    public static void z3() {
        int[] array = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
        for (int i = 0; i < array.length; i++)
            if (array[i] < 6)
                array[i] *= 2;
        System.out.println(Arrays.toString(array));
    }

    public static void z4() {
        int[][] matrix = new int[4][4];
        for (int i = 0; i < 4; i++) {
            matrix[i][i] = 1;
            matrix[i][4 - i - 1] = 1;
        }
        System.out.println(Arrays.deepToString(matrix));
        for (int i = 0; i < 4; i++)
            System.out.println(Arrays.toString(matrix[i]));
    }
    public static void z5() {

    }
    public static void z6() {
        int[] minmax = new int[2];
        minmax[0] = minmax[1] = array[0];
        for (int i = 1; i < array.length; i++) {
            if (minmax[0] > array[i])
                minmax[0] = array[i];
            if (minmax[1] < array[i])
                minmax[1] = array[i];
        }
        System.out.println(Arrays.toString(array));
    }
}


Задание 4
import java.util.Random;
import java.util.Scanner;
public class Krestiki {
    public static int SIZE = 3;
    public static int DOTS_TO_WIN = 3;
    public static final char DOT_EMPTY = '•';
    public static final char DOT_X = 'X';
    public static final char DOT_O = 'O';
    public static char[][] map;
    public static Scanner sc = new Scanner(System.in);
    public static Random rand = new Random();
    public static void main(String[] args) {
        initMap();
        printMap();
        while (true) {
            humanTurn();
            printMap();
            if (checkWin(DOT_X)) {
                System.out.println("Победил человек");
                break;
            }
            if (isMapFull()) {
                System.out.println("Ничья");
                break;
            }
            aiTurn();
            printMap();
            if (checkWin(DOT_O)) {
                System.out.println("Победил Искуственный Интеллект");
                break;
            }
            if (isMapFull()) {
                System.out.println("Ничья");
                break;
            }
        }
        System.out.println("Игра закончена");
    }
    public static boolean checkWin(char symb) {
        for (int i = 0; i < 3; i++) {
            if (map[i][0] == symb && map[i][1] == symb && map[i][2] == symb) {
                return true;
            }
        }
        for (int i = 0; i < 3; i++) {
            if (map[0][i] == symb && map[1][i] == symb && map[2][i] == symb) {
                return true;
            }
        }
        if ((map[0][0] == symb && map[1][1] == symb && map[2][2] == symb) ||
                (map[2][0] == symb && map[1][1] == symb && map[0][2] == symb)) {
            return true;
        }
        return false;
    }
    public static boolean isMapFull() {
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                if (map[i][j] == DOT_EMPTY) return false;
            }
        }
        return true;
    }
    public static void aiTurn() {
        int x, y;
        do {
            x = rand.nextInt(SIZE);
            y = rand.nextInt(SIZE);
        } while (!isCellValid(x, y));
        System.out.println("Компьютер походил в точку " + (x + 1) + " " + (y + 1));
        map[y][x] = DOT_O;
    }
    public static void humanTurn() {
        int x, y;
        do {
            System.out.println("Введите координаты в формате X Y");
            x = sc.nextInt() - 1;
            y = sc.nextInt() - 1;
        } while (!isCellValid(x, y));
        map[y][x] = DOT_X;
    }
    public static boolean isCellValid(int x, int y) {
        if (x < 0 || x >= SIZE || y < 0 || y >= SIZE) return false;
        if (map[y][x] == DOT_EMPTY) return true;
        return false;
    }
    public static void initMap() {
        map = new char[SIZE][SIZE];
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                map[i][j] = DOT_EMPTY;
            }
        }
    }
    public static void printMap() {
        for (int i = 0; i <= SIZE; i++) {
            System.out.print(i + " ");
        }
        System.out.println();
        for (int i = 0; i < SIZE; i++) {
            System.out.print((i + 1) + " ");
            for (int j = 0; j < SIZE; j++) {
                System.out.print(map[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }
}
